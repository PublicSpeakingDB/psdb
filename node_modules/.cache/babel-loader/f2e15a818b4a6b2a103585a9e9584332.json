{"remainingRequest":"/Users/aletheia/Desktop/psdb/node_modules/babel-loader/lib/index.js!/Users/aletheia/Desktop/psdb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aletheia/Desktop/psdb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aletheia/Desktop/psdb/src/components/PublicSpeakingDashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aletheia/Desktop/psdb/src/components/PublicSpeakingDashboard.vue","mtime":1700716073927},{"path":"/Users/aletheia/Desktop/psdb/babel.config.js","mtime":1700709006221},{"path":"/Users/aletheia/Desktop/psdb/node_modules/cache-loader/dist/cjs.js","mtime":1700709033581},{"path":"/Users/aletheia/Desktop/psdb/node_modules/babel-loader/lib/index.js","mtime":1700709030329},{"path":"/Users/aletheia/Desktop/psdb/node_modules/cache-loader/dist/cjs.js","mtime":1700709033581},{"path":"/Users/aletheia/Desktop/psdb/node_modules/vue-loader/lib/index.js","mtime":1700709119986}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["rs","Plotly","faceapi","dotenv","axios","config","name","props","data","msg","msg2","msg3","wordsSpoken","output","workingOutput","workingTime","grabTimeInterval","registerWPMInterval","getEmotionStatsInterval","summarizeDataInterval","initialTime","time","timeElapsed","timeDifference","wordCount","totalWords","wordCountDividedByTime","stop","wpm","anger","fear","excitement","boredom","sadness","happiness","readability","show","show2","show3","showProcess","showBegin","showStop","loading","show4","show5","showWPM","showTextEmotion","showTime","showData","WPMSelected","WPMColor","textEmotionSelected","textEmotionColor","showVoiceEmotion","voiceEmotionSelected","voiceEmotionColor","showFaceEmotion","faceEmotionSelected","faceEmotionColor","textEmotionData","overallDataObject","currentDataObject","dataNamer","time1","time2","placeHolderForTimeCheck","volumeCallback","volumeInterval","volumeValue","volumeNumber","showVolume","faceEmotionState","analyzeFaceInterval","renderDataInterval","faceAngry","faceDisgusted","faceFearful","faceHappy","faceNeutral","faceSad","faceSurprised","continuous","speechAgain","API","process","env","VUE_APP_ROOT_API2","API2","VUE_APP_ROOT_API3","feedback","feedback2","showFeedback","showFeedback2","dataSummary","referenceTime","firstSummary","dataSample","tickerNumber","cancelCall","original","mediaRecorder","socket","transcripts","created","window","console","log","methods","begin2","stream","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","isTypeSupported","alert","mimeType","DG_URL","DG_KEY","WebSocket","onopen","startStreaming","onmessage","message","handleResponse","Date","now","setInterval","grabTime","renderData","summarizeData","startVolumeMeter","document","getElementById","style","display","visualizeData","error","addEventListener","event","size","readyState","send","start","received","JSON","parse","alternatives","channel","length","transcript","push","node","createElement","appendChild","createTextNode","querySelector","elem","scrollTop","scrollHeight","countWords","begin","analyzeFace","SpeechRecognition","webkitSpeechRecognition","recognition","volumeVisualizer","audioStream","echoCancellation","audioContext","AudioContext","audioSource","createMediaStreamSource","analyser","createAnalyser","fftSize","minDecibels","maxDecibels","smoothingTimeConstant","connect","volumes","Uint8Array","frequencyBinCount","getByteFrequencyData","volumeSum","volume","averageVolume","setProperty","e","lastVolume","Math","min","max","random","setVolume","round","selectWPM","selectTextEmotion","selectVoiceEmotion","selectFaceEmotion","initiateVoiceControl","SpeechGrammarList","webkitSpeechGrammarList","SpeechRecognitionEvent","webkitSpeechRecognitionEvent","finalTranscript","interimResults","maxAlternatives","onresult","interimTranscript","i","resultIndex","len","results","isFinal","clearInterval","video","videoContainer","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","startVideo","constraints","mediaStream","srcObject","catch","err","canvas","createCanvasFromMedia","willReadFrequently","displaySize","width","height","matchDimensions","detections","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","resizedDetections","resizeResults","getContext","clearRect","resizedResults","draw","drawDetections","minProbability","drawFaceExpressions","Object","keys","expressions","maxValue","values","emotion","filter","item","angry","disgusted","fearful","happy","neutral","sad","surprised","div","innerHTML","middleTime","parseInt","formatted","convertTime","selectedTime","value","selectedTimeFifteen","selectedTimeThirty","element","backgroundColor","miliseconds","totalSeconds","floor","minutes","seconds","str","arr","split","word","registerWPM","getReadabilityStats","gunningFog","stopVoiceControl","div2","setTimeout","getFeedback","reset","location","reload","unhideData","hideData","promise1","resolve","reject","constructJSON","resetWorkingOutput","overallRawData","overallSlicedDataArray","slice","numberOfObjects","dataSource","stringify","workingValue","instance","actualTime","substring","indexOf","client","create","headers","Authorization","params","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","post","result","rawResultA","choices","text","pdfResults","print","wordsPerMinute","x","y","mode","line","color","forEach","val","layout","paper_bgcolor","plot_bgcolor","title","font","family","xref","automargin","xanchor","yanchor","autosize","xaxis","tickfont","tickcolor","yaxis","margin","autoexpand","WPMChart","newPlot","layout3","volumeChart","word_complexity","layout5","readabilityChart","Angry","Fearful","Excited","Bored","Sad","Happy","Disgusted","layout4","FACEEMOTIONChart"],"sources":["src/components/PublicSpeakingDashboard.vue"],"sourcesContent":["<template>\n  <div id=\"body\" class=\"dashboard\">\n    <p v-if=\"!loading\" id=\"loadingContainer\">\n      Initializing <br /><img\n        id=\"loading\"\n        src=\"https://media.giphy.com/media/Ky5F5Rhn1WRVZmvE5W/giphy.gif\"\n      /><br /><span id=\"initialMessage\"\n        >(Make sure your webcam is facing you.)</span\n      >\n    </p>\n    <h1 v-if=\"showProcess\" id=\"mainTitle\">\n      <img\n        id=\"talking\"\n        alt=\"image of voice waves leaving someone's mouth. Attribution: Speak Icon, by Voysla, 'https://www.flaticon.com/free-icons/speak'\"\n        src=\"talking.png\"\n      />\n      {{ msg }}\n    </h1>\n    <p v-if=\"showProcess\" id=\"messageTwo\">\n      {{ msg2 }}\n    </p>\n    <p v-if=\"showProcess\" id=\"messageThree\">\n      {{ msg3 }}\n    </p>\n    <span id=\"timeHolder\">Time: </span>\n    <!--<span><button  v-bind:style=\"{ backgroundColor: WPMColor}\" v-if=\"!show\" v-on:click=\"selectWPM\" class=\"optionsButton\" id=\"optionWPM\"> Words Per Minute</button><button v-bind:style=\"{ backgroundColor: textEmotionColor}\" v-if=\"!show\" v-on:click=\"selectTextEmotion\" class=\"optionsButton\" id=\"optionEmotionsText\"> Emotions in Text</button></span>\n\t\t<span><button v-bind:style=\"{ backgroundColor: voiceEmotionColor}\" v-if=\"!show\" v-on:click=\"selectVoiceEmotion\" class=\"optionsButton\" id=\"optionEmotionVoice\"> Emotions in Voice</button><button v-bind:style=\"{ backgroundColor: faceEmotionColor}\" v-if=\"!show\" v-on:click=\"selectFaceEmotion\" class=\"optionsButton\" id=\"optionEmotionsFace\"> Emotions in Face</button></span><br>-->\n    <span\n      ><span v-if=\"!show3\" id=\"dropdownWrapper\">\n        <label for=\"speakingTime\" alt=\"Choose Desired Speech Length:\"></label>\n        <select name=\"speakingTime\" id=\"speakingTime\">\n          <option value=\"nope\" selected>\n            Choose Target Speaking Time  -  (Gives 30 and 15 Sec Warnings Before\n            Selected Time)\n          </option>\n          <option value=\"60000\">1 Min</option>\n          <option value=\"180000\">3 Min</option>\n          <option value=\"300000\">5 Min</option>\n          <option value=\"600000\">10 Min</option>\n          <option value=\"900000\">15 Min</option>\n          <option value=\"1200000\">20 Min</option>\n          <option value=\"1500000\">25 Min</option>\n          <option value=\"1800000\">30 Min</option>\n          <option value=\"2700000\">45 Min</option>\n          <option value=\"3600000\">60 Min</option>\n        </select>\n      </span>\n      <button\n        id=\"begin\"\n        v-if=\"showBegin\"\n        v-on:click=\"\n          begin();\n          selectWPM();\n          selectTextEmotion();\n          selectVoiceEmotion();\n          selectFaceEmotion();\n        \"\n      >\n        Begin</button\n      ><button id=\"start\" v-if=\"!show3\" v-on:click=\"begin2\">\n        Start</button\n      ><button id=\"stop\" v-if=\"!showStop\" v-on:click=\"stopVoiceControl\">\n        Stop</button\n      ><button id=\"reset\" v-if=\"!show3\" v-on:click=\"reset\">Reset</button\n      ><button id=\"pdf\" v-if=\"!show5\" v-on:click=\"pdfResults\">\n        Save\n      </button></span\n    >\n    <!--<br><button id=\"next\" v-if=\"!show\" v-on:click=\"next\">Next</button>--><br />\n    <span id=\"rawData\"></span>\n    <button v-if=\"!showTime\" class=\"title\" id=\"timer\">{{ time }}</button>\n    <span id=\"container\"\n      ><div id=\"video-container\" class=\"video-container\">\n        <video id=\"video\" autoplay width=\"150\" height=\"150\"></video></div\n    ></span>\n    <span v-if=\"!show3\" id=\"volume-visualizer-wrapper\"\n      ><button id=\"volume-visualizer\"></button\n    ></span>\n    <ul v-if=\"!show3\" id=\"output\"></ul>\n    <span\n      ><button v-if=\"!show3\" id=\"dataShowButton\" v-on:click=\"unhideData\">\n        View Raw Data</button\n      ><button v-if=\"!show3\" id=\"dataHideButton\" v-on:click=\"hideData\">\n        Hide Raw Data\n      </button></span\n    >\n\n    <!--FEEDBACK SECTION-->\n\n    <!--WPM-->\n    <span v-if=\"!showWPM\" id=\"wpmChart\"></span>\n    <span v-if=\"!showVolume\" id=\"volumeChart\"></span>\n    <span v-if=\"!showFaceEmotion\" id=\"faceEmotionChart\"></span>\n    <span v-if=\"!showTextEmotion\" id=\"readabilityChart\"></span>\n    <h1 v-if=\"!showFeedback\" id=\"specificAndOverallFeedback\">\n      Specific Feedback\n    </h1>\n    <p v-if=\"!showFeedback\" id=\"feedback\">{{ feedback }}</p>\n    <h1 v-if=\"!showFeedback2\" id=\"specificAndOverallFeedback\">\n      Overall Feedback\n    </h1>\n    <p v-if=\"!showFeedback2\" id=\"feedback\">{{ feedback2 }}</p>\n    <!-- \n\t\t<span v-if=\"!showTextEmotion\" id=\"textEmotionChart\"></span>\n -->\n\n    <footer id=\"footer\">\n      <section id=\"version\">\n        Version 0.1 (Beta)<br />\n        <div id=\"bugs\">\n          <section>\n            If you find a bug please report it here:\n            <a\n              href=\"https://rowan.co1.qualtrics.com/jfe/form/SV_8AhIsft05UgIUqW\"\n              >Bug/Error Report Form</a\n            >\n          </section>\n          <br />\n          Known Bugs and Limitations: <br />\n          <section>\n            - Current version of app works only Google Chrome on desktop\n          </section>\n          <section>\n            - User needs to speak for at least 20 seconds before meaningful\n            results are produced.\n          </section>\n        </div>\n      </section>\n    </footer>\n    <!--<p v-if=\"!showWPM\" id=\"wpm\">{{ wpm }} <br><b>Overall Average Words Per Minute</b></p><br>-->\n  </div>\n</template>\n\n<script>\n//import paralleldots from 'paralleldots'\nimport * as rs from \"text-readability\";\nimport Plotly from \"plotly.js-dist\";\nimport * as faceapi from \"face-api.js\";\nimport dotenv from \"dotenv\";\nimport axios from \"axios\";\ndotenv.config();\nexport default {\n  name: \"publicSpeakingDashboard\",\n  props: {},\n  data() {\n    return {\n      msg: \"Public Speaking Dashboard\",\n      msg2: \"An AI-powered tool to help you hone your public speaking skills.\",\n      msg3: \"\",\n      wordsSpoken: \"START\",\n      output: \"Recognized Text\",\n      workingOutput: \"\",\n      workingTime: 0,\n      grabTimeInterval: \"\",\n      registerWPMInterval: \"\",\n      getEmotionStatsInterval: \"\",\n      summarizeDataInterval: \"\",\n      initialTime: 0,\n      time: \"00:00\",\n      timeElapsed: 0,\n      timeDifference: 0,\n      wordCount: 0,\n      totalWords: 0,\n      wordCountDividedByTime: 0,\n      stop: false,\n      wpm: 0,\n      anger: 0,\n      fear: 0,\n      excitement: 0,\n      boredom: 0,\n      sadness: 0,\n      happiness: 0,\n      readability: 0,\n      show: true,\n      show2: true,\n      show3: true,\n      showProcess: true,\n      showBegin: true,\n      showStop: true,\n      loading: true,\n      show4: true,\n      show5: true,\n      showWPM: true,\n      showTextEmotion: true,\n      showTime: true,\n      showData: true,\n      WPMSelected: false,\n      WPMColor: \"#CBC3E3\",\n      textEmotionSelected: false,\n      textEmotionColor: \"#CBC3E3\",\n      showVoiceEmotion: true,\n      voiceEmotionSelected: false,\n      voiceEmotionColor: \"#CBC3E3\",\n      showFaceEmotion: true,\n      faceEmotionSelected: false,\n      faceEmotionColor: \"#CBC3E3\",\n      textEmotionData: \"\",\n      overallDataObject: \"\",\n      currentDataObject: \"\",\n      dataNamer: 0,\n      time1: true,\n      time2: false,\n      placeHolderForTimeCheck: 0,\n      volumeCallback: null,\n      volumeInterval: null,\n      volumeValue: 0,\n      volumeNumber: 0,\n      showVolume: true,\n      faceEmotionState: \"\",\n      analyzeFaceInterval: \"\",\n      renderDataInterval: \"\",\n      //analyzingFace: true,\n      faceAngry: 0,\n      faceDisgusted: 0,\n      faceFearful: 0,\n      faceHappy: 0,\n      faceNeutral: 0,\n      faceSad: 0,\n      faceSurprised: 0,\n      continuous: true,\n      speechAgain: false,\n      API: process.env.VUE_APP_ROOT_API2,\n      API2: process.env.VUE_APP_ROOT_API3,\n      feedback: \"\",\n      feedback2: \"\",\n      showFeedback: true,\n      showFeedback2: true,\n      dataSummary: \"\",\n      referenceTime: \"\",\n      firstSummary: true,\n      dataSample: \"\",\n      tickerNumber: 0,\n      cancelCall: true,\n      original: false, \n      mediaRecorder: null,\n      socket: null,\n      transcripts: []\n    };\n  },\n\ncreated() {\n  if (this.original == true) {\n    if (\"SpeechRecognition\" in window || \"webkitSpeechRecognition\" in window) {\n      console.log(\"Landing page loaded\");\n      console.log(\"Speech recognition supported\");\n    } else {\n      console.log(\"Landing page loaded\");\n      console.log(\"Speech recognition not supported.\");\n      this.msg2 =\n        \"Public Speaking Dashboard is not supported by this browser and/or device. Currently, Public Speaking Dashboard only works on desktop and in the Chrome browser.\";\n      this.showBegin = false;\n    }\n    }\n  },\n\n  methods: {\n  \nbegin2: async function () {\nif (this.stop == false) {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    if (!MediaRecorder.isTypeSupported('audio/webm')) {\n      alert('Unsupported browser');\n      return;\n    }\n\n    this.mediaRecorder = new MediaRecorder(stream, { mimeType: 'audio/webm' });\n\n    const DG_URL = 'wss://api.deepgram.com/v1/listen?language=en';\n    const DG_KEY = this.API2;\n    this.socket = new WebSocket(DG_URL, ['token', DG_KEY]);\n    this.socket.onopen = () => this.startStreaming();\n    this.socket.onmessage = (message) => this.handleResponse(message);\n    \n    if (\n        this.textEmotionSelected == true ||\n        this.WPMSelected == true ||\n        this.voiceEmotionSelected == true ||\n        this.faceEmotionSelected == true\n      ) {\n        this.msg3 = \"\";\n        if (this.stop == false) {\n          this.cancelCall = false;\n          this.showTime = false;\n          this.initialTime = Date.now();\n          this.grabTimeInterval = window.setInterval(this.grabTime, 1000);\n          this.renderDataInterval = window.setInterval(this.renderData, 1000);\n          this.summarizeDataInterval = window.setInterval(\n            this.summarizeData,\n            15000\n          );\n\n          this.startVolumeMeter();\n          document.getElementById(\"container\").style.display = \"inline\";\n          this.showStop = false;\n          this.visualizeData();\n          console.log(\"app started\");\n          this.show5 = true;\n\t\t\tthis.stop = true;\n          // if (this.analyzingFace == false){this.analyzeFace()}\n        }\n\n      } else {\n        this.msg2 =\n          \"No input data selected. Try selecting words per minute or another parameter.\";\n      }\n  } catch (error) {\n    alert(error);\n  }\n  }\n},\n\nstartStreaming: function () {\n  this.mediaRecorder.addEventListener('dataavailable', (event) => {\n    if (event.data.size > 0 && this.socket.readyState == 1) {\n      this.socket.send(event.data);\n    }\n  });\n\n  this.mediaRecorder.start(250); // Start recording in chunks of 250ms\n},\n\nhandleResponse: function (message) {\n  const received = JSON.parse(message.data);\n  const alternatives = received.channel && received.channel.alternatives;\n  if (alternatives && alternatives.length > 0) {\n    const transcript = alternatives[0].transcript;\n    if (transcript) {\n      this.transcripts.push(transcript);\n      console.log(\"deepgram \" + transcript);\n      \n      if (this.workingTime) {\n              this.workingOutput = transcript;\n              var node = document.createElement(\"li\");\n              node.appendChild(document.createTextNode(\" \" + this.workingTime + \": \" + this.workingOutput));\n              document.querySelector(\"ul\").appendChild(node);\n              var elem = document.getElementById(\"output\");\n              elem.scrollTop = elem.scrollHeight;\n              console.log(\"Detected speech:\" + this.workingOutput);\n              \n              \n              this.wordsSpoken = transcript;\n              this.output = this.output += this.wordsSpoken\n              this.wordCount = this.countWords(this.output);\n              this.totalWords = this.wordCount;\n      \n      }\n      \n    }\n  }\n},\n\n  \n    begin: function () {\n      //initiate speech recognition and ask for microphone permission\n      this.analyzeFace();\n      window.SpeechRecognition =\n        window.webkitSpeechRecognition || window.SpeechRecognition;\n      let recognition = new window.SpeechRecognition();\n      recognition.start();\n      this.show = false;\n      this.msg2 = \"\";\n      this.msg3 =\n        \"Choose a desired speech length. Click start. Then, click stop when finished.\";\n      console.log(\"Dashboard page loaded\");\n    },\n\n    startVolumeMeter: function () {\n      (async () => {\n        const volumeVisualizer = document.getElementById(\"volume-visualizer\");\n        // Initialize\n        try {\n          const audioStream = await navigator.mediaDevices.getUserMedia({\n            audio: {\n              echoCancellation: true,\n            },\n          });\n\n          const audioContext = new AudioContext();\n          const audioSource = audioContext.createMediaStreamSource(audioStream);\n          const analyser = audioContext.createAnalyser();\n          analyser.fftSize = 512;\n          analyser.minDecibels = -127;\n          analyser.maxDecibels = 0;\n          analyser.smoothingTimeConstant = 0.4;\n          audioSource.connect(analyser);\n          const volumes = new Uint8Array(analyser.frequencyBinCount);\n          this.volumeCallback = () => {\n            analyser.getByteFrequencyData(volumes);\n            let volumeSum = 0;\n            for (const volume of volumes) volumeSum += volume;\n            const averageVolume = volumeSum / volumes.length;\n            // Value range: 127 = analyser.maxDecibels - analyser.minDecibels;\n            volumeVisualizer.style.setProperty(\n              \"--volume\",\n              (averageVolume * 100) / 127 + \"%\"\n            );\n            this.volumeNumber = averageVolume;\n            this.showVolume = false;\n          };\n        } catch (e) {\n          console.error(\n            \"Failed to initialize volume visualizer, simulating instead...\",\n            e\n          );\n          let lastVolume = 50;\n          this.volumeCallback = () => {\n            const volume = Math.min(\n              Math.max(Math.random() * 100, 0.8 * lastVolume),\n              1.2 * lastVolume\n            );\n            lastVolume = volume;\n            volumeVisualizer.style.setProperty(\"--volume\", volume + \"%\");\n          };\n        }\n        // Use\n\n        if (this.volumeCallback !== null && this.volumeInterval === null)\n          this.volumeInterval = setInterval(this.volumeCallback, 100);\n      })();\n    },\n\n    setVolume: function () {\n      this.volumeValue = Math.round(this.volumeNumber);\n    },\n\n    selectWPM: function () {\n      if (this.WPMSelected == false) {\n        this.msg2 = \"\";\n        this.WPMSelected = true;\n        this.WPMColor = \"#f48d79\";\n        if (this.WPMSelected == true) {\n          this.showWPM = false;\n        }\n      } else {\n        this.WPMSelected = false;\n        this.WPMColor = \"#CBC3E3\";\n        if (this.WPMSelected == false) {\n          this.showWPM = true;\n        }\n      }\n    },\n\n    selectTextEmotion: function () {\n      if (this.textEmotionSelected == false) {\n        this.msg2 = \"\";\n        this.textEmotionSelected = true;\n        this.textEmotionColor = \"#f48d79\";\n        if (this.textEmotionSelected == true) {\n          this.showTextEmotion = false;\n        }\n      } else {\n        this.textEmotionSelected = false;\n        this.textEmotionColor = \"#CBC3E3\";\n        if (this.textEmotionSelected == false) {\n          this.showTextEmotion = true;\n        }\n      }\n    },\n\n    selectVoiceEmotion: function () {\n      if (this.voiceEmotionSelected == false) {\n        this.msg2 = \"\";\n        this.voiceEmotionSelected = true;\n        this.voiceEmotionColor = \"#f48d79\";\n        if (this.voiceEmotionSelected == true) {\n          this.showVoiceEmotion = false;\n        }\n      } else {\n        this.voiceEmotionSelected = false;\n        this.voiceEmotionColor = \"#CBC3E3\";\n        if (this.voiceEmotionSelected == false) {\n          this.showVoiceEmotion = true;\n        }\n      }\n    },\n\n    selectFaceEmotion: function () {\n      if (this.faceEmotionSelected == false) {\n        this.msg2 = \"\";\n        this.faceEmotionSelected = true;\n        this.faceEmotionColor = \"#f48d79\";\n        if (this.faceEmotionSelected == true) {\n          this.showFaceEmotion = false;\n        }\n      } else {\n        this.faceEmotionSelected = false;\n        this.faceEmotionColor = \"#CBC3E3\";\n        if (this.faceEmotionSelected == false) {\n          this.showFaceEmotion = true;\n        }\n      }\n    },\n\n    initiateVoiceControl: function () {\n      //start listening for words and making a transcript of detected words\n      console.log(\"Voice recognition initiated\");\n      window.SpeechRecognition = window.webkitSpeechRecognition; //|| window.SpeechRecognition;\n      window.SpeechGrammarList = window.webkitSpeechGrammarList; //|| window.SpeechGrammarList;\n      window.SpeechRecognitionEvent = window.webkitSpeechRecognitionEvent; //|| window.SpeechRecognitionEvent;\n\n      let finalTranscript = \"\";\n      let recognition = new window.SpeechRecognition();\n      recognition.interimResults = true;\n      recognition.maxAlternatives = 10;\n      recognition.continuous = true;\n      (recognition.onresult = (event) => {\n        let interimTranscript = \"\";\n        for (\n          let i = event.resultIndex, len = event.results.length;\n          i < len;\n          i++\n        ) {\n          let transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            finalTranscript += transcript;\n            if (this.workingTime) {\n              this.workingOutput = transcript;\n              var node = document.createElement(\"li\");\n              node.appendChild(\n                document.createTextNode(\n                  \" \" + this.workingTime + \": \" + this.workingOutput\n                )\n              );\n              document.querySelector(\"ul\").appendChild(node);\n              var elem = document.getElementById(\"output\");\n              elem.scrollTop = elem.scrollHeight;\n              console.log(\"Detected speech:\" + this.workingOutput);\n              recognition.start();\n            }\n          } else {\n            interimTranscript += transcript;\n          }\n        }\n        this.wordsSpoken = finalTranscript;\n        this.output = this.wordsSpoken += interimTranscript;\n        this.wordCount = this.countWords(this.output);\n        this.totalWords = this.wordCount;\n      }),\n        recognition.start();\n        \n\n\n      if (\n        this.textEmotionSelected == true ||\n        this.WPMSelected == true ||\n        this.voiceEmotionSelected == true ||\n        this.faceEmotionSelected == true\n      ) {\n        this.msg3 = \"\";\n        if (this.stop == false) {\n          this.cancelCall = false;\n          this.showTime = false;\n          this.initialTime = Date.now();\n          this.grabTimeInterval = window.setInterval(this.grabTime, 1000);\n          this.renderDataInterval = window.setInterval(this.renderData, 1000);\n          this.summarizeDataInterval = window.setInterval(this.summarizeData, 15000);\n\n          this.startVolumeMeter();\n          document.getElementById(\"container\").style.display = \"inline\";\n          this.showStop = false;\n          this.visualizeData();\n          console.log(\"app started\");\n          this.show5 = true;\n\n          // if (this.analyzingFace == false){this.analyzeFace()}\n        }\n        if (this.stop == true) {\n          recognition.stop();\n          clearInterval(this.grabTimeInterval);\n          this.showTime = false;\n          console.log(\"app stopped\");\n          this.stop = false;\n          this.show5 = false;\n        }\n      } else {\n        this.msg2 =\n          \"No input data selected. Try selecting words per minute or another parameter.\";\n      }\n    },\n\n    analyzeFace: function () {\n      this.showProcess = false;\n      this.showBegin = false;\n      const video = document.querySelector(\"video\");\n      this.loading = false;\n      const videoContainer = document.getElementById(\"video-container\");\n\n      Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(\"./models\"),\n        faceapi.nets.faceLandmark68Net.loadFromUri(\"./models\"),\n        faceapi.nets.faceRecognitionNet.loadFromUri(\"./models\"),\n        faceapi.nets.faceExpressionNet.loadFromUri(\"./models\"),\n      ]).then(startVideo);\n\n      function startVideo() {\n        var constraints = { audio: false, video: true };\n\n        navigator.mediaDevices\n          .getUserMedia(constraints)\n          .then(function (mediaStream) {\n            video.srcObject = mediaStream;\n          })\n          .catch(function (err) {\n            console.log(err.name + \": \" + err.message);\n          });\n      }\n\n      video.addEventListener(\"playing\", () => {\n        console.log(\"Initializing face recognition\");\n        const canvas = faceapi.createCanvasFromMedia(video);\n        canvas.willReadFrequently = true;\n        videoContainer.appendChild(canvas);\n\n        const displaySize = { width: video.width, height: video.height };\n        faceapi.matchDimensions(canvas, displaySize);\n\n        this.analyzeFaceInterval = window.setInterval(async () => {\n          const detections = await faceapi\n            .detectSingleFace(video, new faceapi.TinyFaceDetectorOptions())\n            .withFaceLandmarks()\n            .withFaceExpressions();\n\n          const resizedDetections = faceapi.resizeResults(\n            detections,\n            displaySize\n          );\n\n          canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n\n          const resizedResults = faceapi.resizeResults(detections, displaySize);\n          faceapi.draw.drawDetections(canvas, resizedDetections);\n\n          const minProbability = 0.01;\n          faceapi.draw.drawFaceExpressions(\n            canvas,\n            resizedResults,\n            minProbability\n          );\n\n          if (resizedDetections && Object.keys(resizedDetections).length > 0) {\n            const expressions = resizedDetections.expressions;\n            const maxValue = Math.max(...Object.values(expressions));\n            const emotion = Object.keys(expressions).filter(\n              (item) => expressions[item] === maxValue\n            );\n\n            this.faceEmotionState = '\"' + `${emotion[0]}` + '\"';\n\n            if (this.loading == false) {\n              this.loading = true;\n              this.show3 = false;\n              this.showProcess = true;\n            }\n          }\n\n          this.faceAngry = Math.round(detections.expressions.angry * 100);\n          this.faceDisgusted = Math.round(\n            detections.expressions.disgusted * 100\n          );\n          this.faceFearful = Math.round(detections.expressions.fearful * 100);\n          this.faceHappy = Math.round(detections.expressions.happy * 100);\n          this.faceNeutral = Math.round(detections.expressions.neutral * 100);\n          this.faceSad = Math.round(detections.expressions.sad * 100);\n          this.faceSurprised = Math.round(\n            detections.expressions.surprised * 100\n          );\n        }, 500);\n      });\n    },\n\n    grabTime: function () {\n      //keep  of time in both milliseconds as well as minutes and seconds\n\n      if (this.time1 == true) {\n        this.timeDifference = Date.now() - this.initialTime;\n        this.dataNamer = this.timeDifference;\n        var div = document.getElementById(\"timeHolder\");\n        div.innerHTML = this.dataNamer;\n      }\n\n      if (this.time1 == false) {\n        this.timeDifference = Date.now() - this.initialTime;\n        var middleTime = parseInt(\n          document.getElementById(\"timeHolder\").innerHTML\n        );\n        this.timeDifference = this.timeDifference + middleTime;\n        this.time2 = true;\n      }\n\n      var formatted = convertTime(this.timeDifference);\n      document.getElementById(\"timer\").innerHTML = \"\" + formatted;\n      this.workingTime = formatted;\n      console.log(formatted);\n      this.timeElapsed = this.timeDifference;\n      this.placeHolderForTimeCheck = this.timeDifference;\n      var selectedTime = document.getElementById(\"speakingTime\").value;\n      var selectedTimeFifteen = selectedTime - 15000;\n      var selectedTimeThirty = selectedTime - 30000;\n      var element = document.getElementById(\"timer\");\n      if (this.placeHolderForTimeCheck >= selectedTimeThirty) {\n        element.style.backgroundColor = \"green\";\n      }\n      if (this.placeHolderForTimeCheck >= selectedTimeFifteen) {\n        element.style.backgroundColor = \"yellow\";\n      }\n      if (this.placeHolderForTimeCheck >= selectedTime) {\n        element.style.backgroundColor = \"red\";\n      }\n\n      function convertTime(miliseconds) {\n        var totalSeconds = Math.floor(miliseconds / 1000);\n        var minutes = Math.floor(totalSeconds / 60);\n        var seconds = totalSeconds - minutes * 60;\n        if (seconds < 10) {\n          seconds = \"0\" + seconds;\n        }\n        if (minutes < 10) {\n          minutes = \"0\" + minutes;\n        }\n        return minutes + \":\" + seconds;\n      }\n    },\n\n    countWords: function (str) {\n      //count how many words are in the transcript of detected words\n      const arr = str.split(\" \");\n      return arr.filter((word) => word !== \"\").length;\n    },\n\n    registerWPM: function () {\n      //calculate number of words per minute--at one second intervals\n      this.wpm = Math.round((this.wordCount / (this.timeElapsed / 1000)) * 60);\n    },\n\n    //getEmotionStats: function () {\n    //send transcript data to be evaluated as per emotional content\n    // const pd = require('paralleldots' || paralleldots)\n    // \t\t\tpd.apiKey = \"hL7rOIhghKLZtrI6w04cFjxVvAOHQ7BiNhjMLAVnMPw\";\n    // \t\t\tpd.emotion(this.workingOutput,\"en\")\n    // \t\t\t.then((response) => {\n    // \t\t\t\tlet obj = JSON.parse(response)\n    // \t\t\t\tthis.textEmotionData = response.slice(1)\n    // \t\t\t\tthis.anger = Math.round(obj.emotion.Angry * 100)\n    // \t\t\t\tthis.fear = Math.round(obj.emotion.Fear * 100)\n    // \t\t\t\tthis.excitement = Math.round(obj.emotion.Excited * 100)\n    // \t\t\t\tthis.boredom = Math.round(obj.emotion.Bored * 100)\n    // \t\t\t\tthis.sadness = Math.round(obj.emotion.Sad * 100)\n    // \t\t\t\tthis.happiness = Math.round(obj.emotion.Happy * 100)\n    // \t\t\t})\n    // \t\t\t\t.catch((error) => {\n    // \t\t\t\tconsole.log(error);\n    // \t\t\t})\n\n    //},\n\n    getReadabilityStats: function () {\n      this.readability = rs.gunningFog(this.workingOutput);\n      console.log(this.readability + \" \" + this.workingOutput);\n    },\n\n    stopVoiceControl: function () {\n      //reset speech recognition so it can stop and clear original timers\n      this.mediaRecorder.stop();\n      this.stop = false;\n      this.time1 = false;\n      if (this.time2 == true) {\n        this.dataNamer = this.timeDifference;\n        var div2 = document.getElementById(\"timeHolder\");\n        div2.innerHTML = this.dataNamer;\n      }\n      if (this.volumeInterval !== null) {\n        clearInterval(this.volumeInterval);\n        this.volumeInterval = null;\n      }\n      if (this.cancelCall == false) {\n        this.summarizeData();\n        this.visualizeData();\n        clearInterval(this.grabTimeInterval);\n        clearInterval(this.renderDataInterval);\n        clearInterval(this.summarizeDataInterval);\n          this.showTime = false;\n          console.log(\"app stopped\");\n          this.stop = false;\n          this.show5 = false;\n        setTimeout(() => {\n          this.getFeedback();\n        }, 1000);\n        this.cancelCall = true;\n      }\n      //this.initiateVoiceControl();\n      //clearInterval(this.analyzeFaceInterval)\n      //this.analyzingFace = false\n    },\n\n    reset: function () {\n      location.reload();\n    },\n\n    unhideData: function () {\n      document.getElementById(\"rawData\").style.display = \"inline-block\";\n    },\n\n    hideData: function () {\n      document.getElementById(\"rawData\").style.display = \"none\";\n    },\n\n    renderData: function () {\n      const promise1 = new Promise((resolve, reject) => {\n        this.setVolume();\n        //this.getEmotionStats()\n        this.getReadabilityStats();\n        this.registerWPM();\n        resolve(\"Data rendered!\");\n        reject(\"Data render failed\");\n      });\n\n      promise1.then(() => {\n        this.constructJSON();\n        this.visualizeData();\n        this.resetWorkingOutput();\n        console.log(\"JSON and charts constructed\");\n      });\n    },\n\n    constructJSON: function () {\n      this.currentDataObject =\n        '{\"time\":' +\n        '\"' +\n        this.workingTime +\n        '\"' +\n        \",\" +\n        '\"wpm\":' +\n        '\"' +\n        this.wpm +\n        '\"' +\n        \",\" +\n        '\"content\":' +\n        '\"' +\n        this.workingOutput +\n        '\"' +\n        \",\" +\n        '\"volume\":' +\n        this.volumeValue +\n        \",\" +\n        '\"word_complexity\":' +\n        this.readability +\n        \",\" +\n        '\"faceAnger\":' +\n        this.faceAngry +\n        \",\" +\n        '\"faceDisgust\":' +\n        this.faceDisgusted +\n        \",\" +\n        '\"faceFear\":' +\n        this.faceFearful +\n        \",\" +\n        '\"faceHappiness\":' +\n        this.faceHappy +\n        \",\" +\n        '\"faceNeutral\":' +\n        this.faceNeutral +\n        \",\" +\n        '\"faceSadness\":' +\n        this.faceSad +\n        \",\" +\n        '\"faceSurprise\":' +\n        this.faceSurprised +\n        \"},\";\n      var div = document.getElementById(\"rawData\");\n      div.innerHTML += this.currentDataObject;\n      this.overallDataObject = document.getElementById(\"rawData\").innerHTML;\n    },\n\n    summarizeData: function () {\n      var overallRawData = document.getElementById(\"rawData\").innerHTML;\n      const overallSlicedDataArray = JSON.parse(\n        \"[\" + overallRawData.slice(0, -1) + \"]\"\n      );\n      const numberOfObjects = overallSlicedDataArray.length;\n      const dataSource = JSON.stringify(overallSlicedDataArray);\n      const workingValue = numberOfObjects - 1;\n      const instance = this;\n      const actualTime = instance.workingTime;\n\n      if (instance.firstSummary == false) {\n        instance.dataSample = dataSource.substring(\n          dataSource.indexOf(instance.referenceTime)\n        );\n        instance.referenceTime = overallSlicedDataArray[workingValue].time;\n        //dataSource[numberOfObjects2 - 1].time;\n      }\n\n      if (instance.firstSummary == true) {\n        instance.dataSample = dataSource;\n        instance.referenceTime = overallSlicedDataArray[workingValue].time;\n        instance.firstSummary = false;\n      }\n\n      const client = axios.create({\n        headers: {\n          Authorization: \"Bearer \" + instance.API,\n        },\n      });\n\n      const params = {\n        model: \"gpt-3.5-turbo-instruct\",\n        prompt:\n          \"Sumarize the following data. The data represents values taken from a section of a speech. Explain to the speaker their speech dynamics while quoting the specific content that corresponds to the other included data about the section of the speech. Data: \" +\n          instance.dataSample,\n        temperature: 0,\n        max_tokens: 900,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0,\n      };\n\n      client\n        .post(\"https://api.openai.com/v1/completions\", params)\n        .then((result) => {\n          instance.showFeedback = false;\n          const rawResultA = result.data.choices[0].text + \" \";\n          instance.dataSummary = instance.dataSummary +=\n            \"$\" + actualTime + \" \" + rawResultA + \"\\n\\n\";\n          instance.feedback = instance.dataSummary;\n          // let div = document.getElementById(\"feedback\");\n          // let p = document.createElement(\"p\");\n          // p.innerText = instance.workingTime + \": \" + rawResultA;\n          // div.appendChild(p);\n        })\n        .catch((error) => {\n          console.log(error);\n          this.msg = error;\n        });\n    },\n\n    getFeedback: function () {\n      const instance = this;\n      console.log(\"final input\" + instance.dataSummary);\n      const client = axios.create({\n        headers: {\n          Authorization: \"Bearer \" + instance.API,\n        },\n      });\n\n      const params = {\n        model: \"gpt-3.5-turbo-instruct\",\n        prompt:\n          \"Give overall summary as well as the averages for data values from the following outputs. Each statement follows a '$' symbol, indicating a timetamp for the section of the speech that the statement corresponds to. Outputs: \" +\n          instance.dataSummary,\n        temperature: 0,\n        max_tokens: 2107,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0,\n      };\n\n      client\n        .post(\"https://api.openai.com/v1/completions\", params)\n        .then((result) => {\n          instance.showFeedback2 = false;\n          const rawResultA = result.data.choices[0].text;\n          instance.feedback2 = rawResultA;\n          console.log(\"final output\" + rawResultA);\n        })\n        .catch((error) => {\n          console.log(error);\n          this.msg = error;\n        });\n    },\n\n    resetWorkingOutput: function () {\n      this.workingOutput = \"\";\n    },\n\n    pdfResults: function () {\n      window.print();\n    },\n\n    visualizeData: function () {\n      var overallRawData = document.getElementById(\"rawData\").innerHTML;\n      var overallSlicedDataArray = \"[\" + overallRawData.slice(0, -1) + \"]\";\n      var data = JSON.parse(overallSlicedDataArray);\n\n      //Words Per Minute\n      if (this.showWPM == false) {\n        let wordsPerMinute = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Words Per Minute\",\n          line: {\n            color: \"#f48d79\",\n            width: 2,\n          },\n        };\n\n        data.forEach(function (val) {\n          wordsPerMinute.x.push(val[\"time\"]);\n          wordsPerMinute.y.push(val[\"wpm\"]);\n        });\n\n        var layout = {\n          paper_bgcolor: \"#222831\",\n          plot_bgcolor: \"#222831\",\n          title: {\n            text: \"Rate of Speech\",\n            font: {\n              family: \"Arial, sans-serif\",\n              size: 20,\n              color: \"#71c68b\",\n            },\n            xref: \"paper\",\n            automargin: true,\n            x: 0.5,\n            xanchor: \"center\",\n            y: 0.88,\n            yanchor: \"top\",\n          },\n          autosize: true,\n          xaxis: {\n            tickfont: {\n              size: 18,\n              color: \"#71c68b\",\n            },\n            tickcolor: \"#36454f\",\n            title: {\n              text: \"Time\",\n              font: {\n                family: \"Arial, sans-serif\",\n                size: 18,\n                color: \"#71c68b\",\n              },\n            },\n          },\n          yaxis: {\n            margin: {\n              autoexpand: true,\n            },\n            automargin: true,\n            tickfont: {\n              size: 18,\n              color: \"#71c68b\",\n            },\n            tickcolor: \"#36454f\",\n            title: {\n              text: \"Words Per Minute\",\n              font: {\n                family: \"Arial, sans-serif\",\n                size: 18,\n                color: \"#71c68b\",\n              },\n            },\n          },\n        };\n\n        var WPMChart = document.getElementById(\"wpmChart\");\n        Plotly.newPlot(WPMChart, [wordsPerMinute], layout);\n      }\n\n      //Volume\n      if (this.showVolume == false) {\n        let volume = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Volume\",\n          line: {\n            color: \"#40D0E0\",\n            width: 2,\n          },\n        };\n\n        data.forEach(function (val) {\n          volume.x.push(val[\"time\"]);\n          volume.y.push(val[\"volume\"]);\n        });\n\n        var layout3 = {\n          paper_bgcolor: \"#222831\",\n          plot_bgcolor: \"#222831\",\n          title: {\n            text: \"Voice Projection\",\n            font: {\n              family: \"Arial, sans-serif\",\n              size: 20,\n              color: \"#c300ff\",\n            },\n            xref: \"paper\",\n            automargin: true,\n            x: 0.5,\n            xanchor: \"center\",\n            y: 0.88,\n            yanchor: \"top\",\n          },\n          autosize: true,\n          xaxis: {\n            tickfont: {\n              size: 18,\n              color: \"#c300ff\",\n            },\n            tickcolor: \"#c300ff\",\n            title: {\n              text: \"Time\",\n              font: {\n                family: \"Arial, sans-serif\",\n                size: 18,\n                color: \"#c300ff\",\n              },\n            },\n          },\n          yaxis: {\n            margin: {\n              autoexpand: true,\n            },\n            automargin: true,\n            tickfont: {\n              size: 18,\n              color: \"#c300ff\",\n            },\n            tickcolor: \"#c300ff\",\n            title: {\n              text: \"Volume\",\n              font: {\n                family: \"Arial, sans-serif\",\n                size: 18,\n                color: \"#c300ff\",\n              },\n            },\n          },\n        };\n\n        var volumeChart = document.getElementById(\"volumeChart\");\n        Plotly.newPlot(volumeChart, [volume], layout3);\n      }\n\n      //Readability\n      if (this.showVolume == false) {\n        let word_complexity = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Volume\",\n          line: {\n            color: \"#40D0E0\",\n            width: 2,\n          },\n        };\n\n        data.forEach(function (val) {\n          word_complexity.x.push(val[\"time\"]);\n          word_complexity.y.push(val[\"word_complexity\"]);\n        });\n\n        var layout5 = {\n          paper_bgcolor: \"#222831\",\n          plot_bgcolor: \"#222831\",\n          title: {\n            text: \"Complexity of Words Spoken\",\n            font: {\n              family: \"Arial, sans-serif\",\n              size: 20,\n              color: \"#fdfd96\",\n            },\n            xref: \"paper\",\n            automargin: true,\n            x: 0.6,\n            xanchor: \"center\",\n            y: 0.88,\n            yanchor: \"top\",\n          },\n          autosize: true,\n          xaxis: {\n            tickfont: {\n              size: 16,\n              color: \"#fdfd96\",\n            },\n            tickcolor: \"#36454f\",\n            title: {\n              text: \"Time\",\n              font: {\n                family: \"Arial, sans-serif\",\n                size: 18,\n                color: \"#fdfd96\",\n              },\n            },\n          },\n          yaxis: {\n            margin: {\n              autoexpand: true,\n            },\n            automargin: true,\n            tickfont: {\n              size: 16,\n              color: \"#fdfd96\",\n            },\n            tickcolor: \"#fdfd96\",\n            title: {\n              text: \"Grade Level\",\n              font: {\n                family: \"Arial, sans-serif\",\n                size: 18,\n                color: \"#fdfd96\",\n              },\n            },\n          },\n        };\n\n        var readabilityChart = document.getElementById(\"readabilityChart\");\n        Plotly.newPlot(readabilityChart, [word_complexity], layout5);\n      }\n\n      //Emotions in Face\n      if (this.faceEmotionSelected == true) {\n        let Angry = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Anger\",\n          line: {\n            color: \"#ff6961\",\n            width: 2,\n          },\n        };\n\n        let Fearful = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Fear\",\n          line: {\n            color: \"#fdfd96\",\n            width: 2,\n          },\n        };\n\n        let Excited = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Surprise\",\n          line: {\n            color: \"#ffb347\",\n            width: 2,\n          },\n        };\n\n        let Bored = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Neutral\",\n          line: {\n            color: \"#cfcfc4\",\n            width: 2,\n          },\n        };\n\n        let Sad = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Sadness\",\n          line: {\n            color: \"#85A1F2\",\n            width: 2,\n          },\n        };\n\n        let Happy = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Happiness\",\n          line: {\n            color: \"#77dd77\",\n            width: 2,\n          },\n        };\n\n        let Disgusted = {\n          x: [],\n          y: [],\n          mode: \"lines\",\n          name: \"Disgust\",\n          line: {\n            color: \"##FF5733\",\n            width: 2,\n          },\n        };\n\n        data.forEach(function (val) {\n          Angry.x.push(val[\"time\"]);\n          Angry.y.push(val[\"faceAnger\"]);\n          Fearful.x.push(val[\"time\"]);\n          Fearful.y.push(val[\"faceFear\"]);\n          Excited.x.push(val[\"time\"]);\n          Excited.y.push(val[\"faceSurprise\"]);\n          Bored.x.push(val[\"time\"]);\n          Bored.y.push(val[\"faceNeutral\"]);\n          Sad.x.push(val[\"time\"]);\n          Sad.y.push(val[\"faceSadness\"]);\n          Happy.x.push(val[\"time\"]);\n          Happy.y.push(val[\"faceHappiness\"]);\n          Disgusted.x.push(val[\"time\"]);\n          Disgusted.y.push(val[\"faceDisgust\"]);\n        });\n\n        var layout4 = {\n          paper_bgcolor: \"#222831\",\n          plot_bgcolor: \"#222831\",\n          title: {\n            text: \"  Expressions in Face\",\n            font: {\n              family: \"Arial, sans-serif\",\n              size: 20,\n              color: \"#f48d79\",\n            },\n            xref: \"paper\",\n            automargin: true,\n            x: 0.6,\n            xanchor: \"center\",\n            y: 0.88,\n            yanchor: \"top\",\n          },\n          autosize: true,\n          xaxis: {\n            tickfont: {\n              size: 16,\n              color: \"#f48d79\",\n            },\n            tickcolor: \"#f48d79\",\n            title: {\n              text: \"Time\",\n              font: {\n                family: \"Arial, sans-serif\",\n                size: 18,\n                color: \"#f48d79\",\n              },\n            },\n          },\n          yaxis: {\n            margin: {\n              autoexpand: true,\n            },\n            automargin: true,\n            tickfont: {\n              size: 16,\n              color: \"#f48d79\",\n            },\n            tickcolor: \"#f48d79\",\n            title: {\n              text: \"Expressions\",\n              font: {\n                family: \"Arial, sans-serif\",\n                size: 18,\n                color: \"#f48d79\",\n              },\n            },\n          },\n        };\n\n        var FACEEMOTIONChart = document.getElementById(\"faceEmotionChart\");\n        Plotly.newPlot(\n          FACEEMOTIONChart,\n          [Angry, Fearful, Excited, Bored, Sad, Happy, Disgusted],\n          layout4\n        );\n      }\n\n      // Emotions in Text\n      // \t\t\tif (this.textEmotionSelected == true) {\n      //\n      // \t\t\t\tlet Anger = {\n      // \t\t\t\t\tx: [],\n      // \t\t\t\t\ty: [],\n      // \t\t\t\t\tmode: \"lines\",\n      // \t\t\t\t\tname: 'Anger',\n      // \t\t\t\t\tline: {\n      // \t\t\t\t\t\tcolor: '#ff6961',\n      // \t\t\t\t\t\twidth: 2\n      // \t\t\t\t\t}\n      // \t\t\t\t};\n      //\n      // \t\t\t\tlet Fear = {\n      // \t\t\t\t\tx: [],\n      // \t\t\t\t\ty: [],\n      // \t\t\t\t\tmode: \"lines\",\n      // \t\t\t\t\tname: 'Fear',\n      // \t\t\t\t\tline: {\n      // \t\t\t\t\t\tcolor: '#fdfd96',\n      // \t\t\t\t\t\twidth: 2\n      // \t\t\t\t\t}\n      // \t\t\t\t};\n      //\n      // \t\t\t\tlet Excitement = {\n      // \t\t\t\t\tx: [],\n      // \t\t\t\t\ty: [],\n      // \t\t\t\t\tmode: \"lines\",\n      // \t\t\t\t\tname: 'Excitement',\n      // \t\t\t\t\tline: {\n      // \t\t\t\t\t\tcolor: '#ffb347',\n      // \t\t\t\t\t\twidth: 2\n      // \t\t\t\t\t}\n      // \t\t\t\t};\n      //\n      // \t\t\t\tlet Boredom = {\n      // \t\t\t\t\tx: [],\n      // \t\t\t\t\ty: [],\n      // \t\t\t\t\tmode: \"lines\",\n      // \t\t\t\t\tname: 'Boredom',\n      // \t\t\t\t\tline: {\n      // \t\t\t\t\t\tcolor: '#cfcfc4',\n      // \t\t\t\t\t\twidth: 2\n      // \t\t\t\t\t}\n      // \t\t\t\t};\n      //\n      // \t\t\t\tlet Sadness = {\n      // \t\t\t\t\tx: [],\n      // \t\t\t\t\ty: [],\n      // \t\t\t\t\tmode: \"lines\",\n      // \t\t\t\t\tname: 'Sadness',\n      // \t\t\t\t\tline: {\n      // \t\t\t\t\t\tcolor: '#85A1F2',\n      // \t\t\t\t\t\twidth: 2\n      // \t\t\t\t\t}\n      // \t\t\t\t};\n      //\n      // \t\t\t\tlet Happiness = {\n      // \t\t\t\t\tx: [],\n      // \t\t\t\t\ty: [],\n      // \t\t\t\t\tmode: \"lines\",\n      // \t\t\t\t\tname: 'Happiness',\n      // \t\t\t\t\tline: {\n      // \t\t\t\t\t\tcolor: '#77dd77',\n      // \t\t\t\t\t\twidth: 2\n      // \t\t\t\t\t}\n      // \t\t\t\t};\n      //\n      // \t\t\t\tdata.forEach(function(val) {\n      // \t\t\t\tAnger.x.push(val[\"time\"]);\n      // \t\t\t\tAnger.y.push(val[\"Angry\"]);\n      // \t\t\t\tFear.x.push(val[\"time\"]);\n      // \t\t\t\tFear.y.push(val[\"Fear\"]);\n      // \t\t\t\tExcitement.x.push(val[\"time\"]);\n      // \t\t\t\tExcitement.y.push(val[\"Excited\"]);\n      // \t\t\t\tBoredom.x.push(val[\"time\"]);\n      // \t\t\t\tBoredom.y.push(val[\"Bored\"]);\n      // \t\t\t\tSadness.x.push(val[\"time\"]);\n      // \t\t\t\tSadness.y.push(val[\"Sad\"]);\n      // \t\t\t\tHappiness.x.push(val[\"time\"]);\n      // \t\t\t\tHappiness.y.push(val[\"Happy\"]);\n      // \t\t\t\t});\n      //\n      // \t\t\t\tvar layout2 = {\n      // \t\t\t\tpaper_bgcolor: \"#222831\",\n      // \t\t\t\tplot_bgcolor: \"#222831\",\n      // \t\t\t\ttitle: {\n      // \t\t\t\t\ttext:'  Emotions in Words Spoken',\n      // \t\t\t\t\tfont: {\n      // \t\t\t\t\tfamily: 'Arial, sans-serif',\n      // \t\t\t\t\tsize: 20,\n      // \t\t\t\t\tcolor: '#fdfd96',\n      // \t\t\t\t},\n      // \t\t\t\t\txref: 'paper',\n      // \t\t\t\t\tautomargin: true,\n      // \t\t\t\t\tx: 0.6,\n      // \t\t\t\t\txanchor: 'center',\n      // \t\t\t\t\ty: 0.88,\n      // \t\t\t\t\tyanchor: 'top'\n      // \t\t\t\t},\n      // \t\t\t\tautosize: true,\n      // \t\t\t\t\txaxis: {\n      // \t\t\t\t\t\ttickfont : {\n      // \t\t\t\t\t\t\tsize : 16,\n      // \t\t\t\t\t\t\tcolor : '#fdfd96'\n      // \t\t\t\t\t\t},\n      // \t\t\t\t\t\ttickcolor: '#36454f',\n      // \t\t\t\t\t\ttitle: {\n      // \t\t\t\t\t\t\ttext: 'Time',\n      // \t\t\t\t\t\t\tfont: {\n      // \t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n      // \t\t\t\t\t\t\tsize: 18,\n      // \t\t\t\t\t\t\tcolor: '#fdfd96',\n      // \t\t\t\t\t\t\t}\n      // \t\t\t\t\t\t},\n      // \t\t\t\t\t},\n      // \t\t\t\t\tyaxis: {\n      // \t\t\t\t\t\tmargin: {\n      // \t\t\t\t\t\t\tautoexpand: true,\n      // \t\t\t\t\t\t},\n      // \t\t\t\t\t\tautomargin: true,\n      // \t\t\t\t\t\ttickfont : {\n      // \t\t\t\t\t\t\tsize : 16,\n      // \t\t\t\t\t\t\tcolor : '#fdfd96'\n      // \t\t\t\t\t\t},\n      // \t\t\t\t\t\ttickcolor: '#fdfd96',\n      // \t\t\t\t\t\ttitle: {\n      // \t\t\t\t\t\ttext: 'Emotions',\n      // \t\t\t\t\t\t\tfont: {\n      // \t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n      // \t\t\t\t\t\t\tsize: 18,\n      // \t\t\t\t\t\t\tcolor: '#fdfd96'\n      // \t\t\t\t\t\t\t}\n      // \t\t\t\t\t\t}\n      // \t\t\t\t\t}\n      // \t\t\t\t};\n      //\n      // \t\t\t\tvar TEXTEMOTIONChart = document.getElementById('textEmotionChart');\n      // \t\t\t\tPlotly.newPlot(TEXTEMOTIONChart, [Anger, Fear, Excitement, Boredom, Sadness, Happiness], layout2);\n      //\t\t\t}\n    },\n  }, //\n}; //\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n@import url(\"https://fonts.cdnfonts.com/css/lcd\");\n#textEmotion,\n#faceEmotion,\n#voiceEmotion,\n#wpm {\n  display: inline-block;\n}\ndiv {\n  background-color: none;\n  color: #71c68b;\n}\n.chartWindow {\n  position: relative;\n  display: inline-block;\n  width: 80%;\n}\n.optionsButton {\n  height: 50px;\n  width: 75px;\n  padding: 12px;\n  font-size: 10px;\n  margin: 5px;\n  border: none;\n  font-weight: bold;\n  color: black;\n  font-family: Arial, sans-serif;\n}\n\n.title {\n  color: white;\n}\n\n#messageTwo {\n  color: #f48d79;\n  font-size: 25px;\n}\n\n#feedback {\n  color: #ffea66;\n  font-size: 25px;\n  text-align: left;\n  background-color: #6b206a;\n  padding: 50px;\n  white-space: pre-wrap;\n}\n\n#messageThree {\n  color: white;\n  font-size: 25px;\n}\n\n#begin {\n  background-color: #c300ff;\n  border: none;\n  height: 50px;\n  width: 100px;\n  font-weight: bold;\n  color: black;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  margin-top: 40px;\n  margin-bottom: -20px;\n}\n\n#begin:hover {\n  background-color: #fdfd96;\n}\n\n#start {\n  background-color: #cbc3e3;\n  border: none;\n  height: 50px;\n  width: 100px;\n  font-weight: bold;\n  color: black;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  margin: 10px;\n}\n\n#start:hover {\n  background-color: lightgreen;\n}\n\n#stop {\n  background-color: #cbc3e3;\n  border: none;\n  height: 50px;\n  width: 100px;\n  font-weight: bold;\n  color: black;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  margin: 10px;\n}\n\n#stop:hover {\n  background-color: #ff726f;\n}\n\n#reset {\n  background-color: #cbc3e3;\n  border: none;\n  height: 50px;\n  width: 100px;\n  font-weight: bold;\n  color: black;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  margin: 10px;\n}\n\n#reset:hover {\n  background-color: lightyellow;\n}\n\n#pdf {\n  background-color: #c300ff;\n  border: none;\n  height: 50px;\n  width: 100px;\n  font-weight: bold;\n  color: black;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  margin: 10px;\n}\n\n#pdf:hover {\n  background-color: #00ffc3;\n}\n\n#next {\n  background-color: #7766c6;\n  border: none;\n  height: 50px;\n  width: 100px;\n  font-weight: bold;\n  color: black;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  margin-top: 40px;\n  margin-bottom: -20px;\n}\n\n#next:hover {\n  background-color: #ffc300;\n}\n\n#output {\n  margin: auto;\n  color: #f48d79;\n  background-color: #222831;\n  width: 80%;\n  text-align: left;\n  overflow: auto;\n  height: 170px;\n  font-size: 25px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\n\n#wpmChart {\n  overflow: auto;\n  width: 80%;\n  display: inline-block;\n  margin-top: 3px;\n  margin-bottom: 0px;\n}\n\n#readabilityChart {\n  overflow: auto;\n  width: 80%;\n  display: inline-block;\n  margin-top: 3px;\n  margin-bottom: 0px;\n}\n\n#volumeChart {\n  overflow: auto;\n  width: 80%;\n  display: inline-block;\n  margin-top: -3px;\n}\n\n#textEmotionChart {\n  overflow: auto;\n  width: 80%;\n  display: inline-block;\n  margin-top: -3px;\n}\n\n#faceEmotionChart {\n  overflow: auto;\n  width: 80%;\n  display: inline-block;\n  margin-top: -3px;\n}\n\n#rawData {\n  display: none;\n  margin: auto;\n  color: lawngreen;\n  background-color: #222831;\n  width: 80%;\n  text-align: left;\n  overflow: scroll;\n  height: 100px;\n  font-size: 25px;\n  margin: 0px;\n}\n\n#dataHideButton {\n  margin: auto;\n  color: #222831;\n  background-color: #222831;\n  width: 40%;\n  text-align: center;\n  height: 30px;\n  font-size: 10px;\n  margin: 0px;\n  border: none;\n}\n\n#dataShowButton {\n  margin: auto;\n  color: #222831;\n  background-color: #222831;\n  width: 40%;\n  text-align: center;\n  height: 30px;\n  font-size: 10px;\n  margin: 0px;\n  border: none;\n}\n\nh1 {\n  font-size: 50px;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0px;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n#talking {\n  height: 100px;\n  margin-bottom: -20px;\n  -webkit-filter: invert(1);\n  filter: invert(1);\n}\n\n#timer {\n  background: #222831;\n  color: white;\n  font-size: 50px;\n  font-family: \"LCD\", sans-serif;\n  height: 100px;\n  width: 80%;\n  border: none;\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 0px;\n}\n\n#timeHolder {\n  background-color: #123b52;\n  color: white;\n  display: none;\n  margin-bottom: 0px;\n}\n\n#speakingTime {\n  background-color: #00ffc3;\n  outline: none;\n  scroll-behavior: smooth;\n  height: 50px;\n  width: 100px;\n  font-weight: bold;\n  color: black;\n  font-family: Arial, sans-serif;\n  font-size: 21px;\n  margin: 10px;\n  text-align: center;\n  border: none;\n}\n\n#speakingTime:hover {\n  background-color: #c300ff;\n}\n\n#volume-visualizer-wrapper {\n  background-color: #222831;\n  margin-top: 0px;\n  padding: 0px;\n  margin-bottom: 0px;\n  width: 80%;\n  display: inline-block;\n  padding-bottom: 10px;\n}\n\n#volume-visualizer {\n  --volume: 0%;\n  position: relative;\n  height: 10px;\n  background-color: #222831;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  width: 100%;\n  border: none;\n  display: inline-block;\n}\n\n#volume-visualizer::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: var(--volume);\n  background-color: #c300ff;\n  transition: width 100ms linear;\n}\n#container {\n  height: 200px;\n  margin-bottom: 0px;\n  display: none;\n  margin-top: -100px;\n}\n\n.video-container {\n  position: relative;\n  margin-top: 0px;\n  background-color: #222831;\n  width: 80%;\n  display: inline-block;\n}\n\ncanvas {\n  position: absolute;\n  left: 0;\n  top: 0px;\n}\n.result-container {\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n.result-container > div {\n  font-size: 1.3rem;\n  padding: 0.5rem;\n  margin: 5px 0;\n  color: white;\n  text-transform: capitalize;\n}\n\nvideo {\n  width: 100%;\n  margin-bottom: -150px;\n  margin-top: 0px;\n}\n\n#loading {\n  height: 50px;\n}\n\n#loadingContainer {\n  color: #fdfd96;\n  margin-bottom: 150%;\n  font-size: 50px;\n}\n\n#specificAndOverallFeedback {\n  color: #ffbf00;\n}\n\n#initialMessage {\n  font-size: 20px;\n  color: #c300ff;\n}\n\n#footer {\n  display: flex;\n  position: float;\n  bottom: 0;\n  margin-top: 27%;\n  height: 3rem;\n  text-align: left;\n}\n\n#bugs {\n  color: white;\n  font-size: 12px;\n}\n\n@page {\n  size: A3 landscape;\n  counter-increment: page;\n  margin: none;\n}\n</style>\n"],"mappings":"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c,gBAAA,EACA,CAAAR,KAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,KAAA,EAAAC,SAAA,GACAC,OAAA,CACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;AACA"}]}